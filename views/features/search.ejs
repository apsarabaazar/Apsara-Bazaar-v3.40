<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Apsara Bazaar - Search</title>
  <link rel="shortcut icon" href="/icons/logo.png" type="image/x-icon">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
  <link rel="stylesheet" href="/css/index.css">
  <link rel="stylesheet" href="/css/search.css">
  <meta name="description" content="Explore Apsara Bazaar â€“ your ultimate portal to Bollywood glamour. Enjoy exclusive behind-the-scenes updates and celebrity news on top Indian actresses." />
  <meta name="keywords" content="Apsara Bazaar, Bollywood, Indian Actresses, Celebrity News, Bollywood Updates, Behind the Scenes, Kiara Advani, Disha Patani, Yami Gautam, Anushka Sharma, Bollywood Insider" />


</head>

<body>
  <!-- Search -->
  <div class="search-bar">

    <svg width="20" height="20" fill="#888888" xmlns="http://www.w3.org/2000/svg">
      <circle cx="9" cy="9" r="7" stroke="#888888" stroke-width="2" fill="none" />
      <line x1="14" y1="14" x2="19" y2="19" stroke="#888888" stroke-width="2" />
    </svg>

    <input id="search-input" type="text" placeholder="Search Apsaras,Posts etc.." />

    <button id="search-button">Search</button>
  </div>

  <!-- Add sort buttons -->
<div class="sort-options" id="sort-options">
  <button class="sort-btn active" data-sort="new">New</button>
  <button class="sort-btn" data-sort="hot">Hot</button>
  <button class="sort-btn" data-sort="oldest">Oldest</button>
</div>

<div id="search-results"><!-- Results --></div>

<!-- Add load more container -->
<div id="load-more-container" style="display: none;">
  <button id="load-more" style="padding:8px 24px; background:#444; color:white; border:none; border-radius:4px;">
    Load More
  </button>
</div>

  <!-- Trending Threads -->
  <!-- <h2>Trending Threads</h2>
  <div class="trending">
    <div class="thread-card">
      <div>
        <div class="thread-title">Your Dream Actress?</div>
      </div>
      <div class="thread-meta">
        <span class="thread-tag">RP</span> 182 replies
      </div>
    </div>
    <div class="thread-card">
      <div>
        <div class="thread-title">Anyone Up For a RP?</div>
      </div>
      <div class="thread-meta">
        <span class="thread-tag">RP</span> 79 replies
      </div>
    </div>
    <div class="thread-card">
      <div>
        <div class="thread-title">Plot Ideas Wanted</div>
      </div>
      <div class="thread-meta">
        <span class="thread-tag">Idea</span> 24 replies
      </div>
    </div>
  </div> -->

  <!-- Games -->
  <!-- <h2>Apsara Games</h2>
  <div class="games">
    <div class="game-card">
      <div class="game-thumb" style="
            background-image: url('https://via.placeholder.com/80x80?text=Storm');
          "></div>
      <div class="game-info">
        <div class="game-title">Apsara Economy Challenge</div>
        <div class="game-type">Choice-based</div>
      </div>
      <button class="play-button">Play Now</button>
    </div>
    <div class="game-card">
      <div class="game-thumb" style="
            background-image: url('https://via.placeholder.com/80x80?text=Lightning');
          "></div>
      <div class="game-info">
        <div class="game-title">Corruption Loop</div>
        <div class="game-type">Time Loop</div>
      </div>
      <button class="play-button">Play Now</button>
    </div>
  </div> -->

  <!-- Tags -->
  <!-- <h2>Explore</h2> -->
  <!-- <div class="tags">
    <div class="tag">#Bikini</div>
    <div class="tag">#HallOfMirrors</div>
    <div class="tag">#PunishmentGame</div>
    <div class="tag">#BeautyContest</div>
    <div class="tag">#BetaReaders</div>
  </div> -->

  <%- include('../components/footer-structure') %>
  <%- include('../components/loader') %>
  <%- include('../components/setupjs') %>



<script>
let currentPage = 1;
let currentSort = 'new';
let currentQuery = '';
let hasMore = true;

document.querySelectorAll('.sort-btn').forEach(btn => {
  btn.addEventListener('click', () => {
    document.querySelectorAll('.sort-btn').forEach(b => b.classList.remove('active'));
    btn.classList.add('active');
    currentSort = btn.dataset.sort;
    currentPage = 1;
    hasMore = true;
    performSearch();
  });
});

document.getElementById('load-more').addEventListener('click', performSearch);
document.getElementById("search-button").addEventListener("click", performSearch);
document.getElementById("search-input").addEventListener("keydown", function(event) {
  if (event.key === "Enter") {
    currentPage = 1;
    hasMore = true;
    performSearch();
  }
});

async function performSearch() {
  const query = document.getElementById("search-input").value.trim();
  if (!query) {
    console.log("No input");
    return;
  }

  const resultsContainer = document.getElementById("search-results");
  const sortContainer = document.getElementById("sort-options");
  const loadMoreContainer = document.getElementById("load-more-container");

  if (query !== currentQuery || currentPage === 1) {
    currentQuery = query;
    loadMoreContainer.style.display = 'none';
  }

  try {
    const searchRes = await fetch(
      `/user/search/${encodeURIComponent(query)}?page=${currentPage}&sort=${currentSort}`
    );
    
    if (!searchRes.ok) throw new Error("Search failed");
    const { posts, hasMore: serverHasMore } = await searchRes.json();

    if (currentPage === 1) resultsContainer.innerHTML = "";
    
    if (!posts.length && currentPage === 1) {
      resultsContainer.innerHTML = "<p>No posts found.</p>";
      return;
    }
    console.log("posts received")
    console.log(posts)

    resultsContainer.style.display="block";
    sortContainer.style.display="flex";


    for (let post of posts) {
          const card = document.createElement("div");
          card.className = "result-card";

          const mediaContainer = document.createElement("div");
          mediaContainer.className = "media-container";

          if (post.fileId) {
            const fileRes = await fetch(`/user/file?fileId=${encodeURIComponent(post.fileId)}`);
            if (fileRes.ok) {
              const { type, url } = await fileRes.json();
              const mediaElement = type === "image"
                ? document.createElement("img")
                : document.createElement("video");

              mediaElement.className = "media-element";
              mediaElement.src = url;
              if (type === "video") mediaElement.controls = true;
              mediaContainer.appendChild(mediaElement);
            }
          }

          if (!mediaContainer.hasChildNodes()) {
            const placeholder = document.createElement("div");
            placeholder.className = "media-placeholder";
            placeholder.textContent = "Media Err.";
            mediaContainer.appendChild(placeholder);
          }

          const info = document.createElement("div");
          info.className = "post-info";

          const title = document.createElement("p");
          title.className = "post-title";
          title.textContent = post.title;

          const author = document.createElement("div");
          author.className = "author-div";

          const pic = document.createElement("img");
          pic.className = "author-logo";
          pic.src = `/icons/avatars/avatar${post.authorInfo.profilepic}.jpg`;

          const authorname = document.createElement("p");
          authorname.className = "author-name";
          authorname.textContent = `/${post.author}`;

          const tags = document.createElement("div");
          tags.className = "tags-container";
          post.tags.forEach(t => {
            const pill = document.createElement("span");
            pill.className = "tag-pill";
            pill.textContent = `#${t}`;
            tags.appendChild(pill);
          });

          author.append(pic, authorname);
          info.append(author, title, tags);
          card.append(info, mediaContainer);

          card.addEventListener("click", () => {
            window.location.href = `/post/details/${post.postId}`;
          });

          resultsContainer.appendChild(card);
        }
      

    loadMoreContainer.style.display = serverHasMore ? 'block' : 'none';
    currentPage++;
    hasMore = serverHasMore;

  } catch (err) {
    console.error(err);
    resultsContainer.innerHTML = "<p>An error occurred. Please try again.</p>";
    loadMoreContainer.style.display = 'none';
  }
}

function InitializeFooter(){
      document.getElementById('home-btn').addEventListener('click', function() {
    // Show the loading overlay
    document.getElementById('loading-overlay').style.display = 'flex';
    setTimeout(function() {
      window.location.href = '/';
    }, 750);  // 100ms delay so the overlay appears
  });
   document.getElementById('search-btn').innerHTML=` <svg rpl="" aria-hidden="true" fill="currentColor" height="24px" icon-name="search-outline" viewBox="0 0 20 20" width="24px" xmlns="http://www.w3.org/2000/svg"> 
          <path d="M18.916 17.717 15.2 14.042a8.043 8.043 0 1 0-1.053 1.069l3.709 3.672a.75.75 0 0 0 1.056-1.066h.004ZM2.5 9a6.5 6.5 0 1 1 11.229 4.446.695.695 0 0 0-.116.077.752.752 0 0 0-.086.132A6.492 6.492 0 0 1 2.5 9Z" stroke="white" ></path>
        </svg> `

         if(isLoggedIn){

          document.getElementById('search-btn').addEventListener('click', function() {
    // Show the loading overlay
    document.getElementById('loading-overlay').style.display = 'flex';
    setTimeout(function() {
      window.location.href = '/user/search';
    }, 750);  // 100ms delay so the overlay appears
  });


  document.getElementById('chat-btn').addEventListener('click', function() {
    // Show the loading overlay
    document.getElementById('loading-overlay').style.display = 'flex';
    setTimeout(function() {
      window.location.href = '/chats';
    }, 750);  // 100ms delay so the overlay appears
  });

  document.getElementById('notification-btn').addEventListener('click', function() {
    // Show the loading overlay
    document.getElementById('loading-overlay').style.display = 'flex';
    setTimeout(function() {
      window.location.href = '/user/notifications';
    }, 750);  // 100ms delay so the overlay appears
  });


 }
    }
    InitializeFooter();


</script>
</body>

</html>