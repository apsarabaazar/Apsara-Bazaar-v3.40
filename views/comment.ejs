<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Apsara Bazaar-Comments</title>
  <link rel="stylesheet" href="/css/comment.css">
  <link rel="stylesheet" href="/css/index.css">
  <link rel="stylesheet" href="/css/add-index.css">
  <link rel="stylesheet" href="/css/post-structure.css">
  <link rel="shortcut icon" href="/icons/logo.png" type="image/x-icon">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100..900;1,100..900&family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Satisfy&display=swap');

    * {
      margin: 0;
      padding: 0;
    }

    body {
      font-family: Bitter;
      background: #0e1113;
      padding: 0px;
    }

    .card-title h3 {
      font-size: 18px;
      font-weight: bold;
    }

    /* Loading Overlay */
    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }

    .loading-spinner {
      border: 4px solid #f3f3f3;
      border-top: 4px solid #3498db;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 2s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
    .like-area{
      display: flex;
      color: #bbbbbb;
    }

    .like-button {
      border: none;
      background-color: transparent;
    }
    .actions{
      display: flex;
      align-items: center;
      gap: 8px;
    }

    
  </style>
</head>

<body>
  <nav class="nav">
    <div class="l-nav" onclick="window.location.href='/'" style="cursor: pointer;">&nbsp; Apsara Bazaar</div>
    <div class="r-nav">
      <% if (!user) { %>
        <div><a href="/auth/login">Login</a></div>
        <% } else { %>
          <div class="showmenu">
            <button class="add-post" onclick="window.location.href='/auth/create-post'">
              <img src="/icons/add.gif" alt="" width="44px" />
            </button>
            &nbsp;&nbsp;&nbsp;
            <button class="menu-btn" onclick="showprofile(1)">
              <img src="/icons/profile.gif" alt="Your GIF" class="gif-overlay" width="32px" />
            </button>
          </div>
          <% } %>
    </div>
  </nav>

  <main style="margin: 0px auto;margin-top: 60px;width: 98%;">

    <%- include('components/post-structure') %>

  </main>

  <div id="fullScreenImageContainer" class="image-overlay" onclick="closeFullscreenImage()">
    <img id="fullScreenImage" src="" alt="Full screen view" />
  </div>

  <% if (user) { %>
    <div id="overlay">
      <div id="content">
        <div class="stclose">
          <button class="clm" style="background-color: #ffa27f00" onclick="showprofile(2)">
            <span class="money-need" style="font-size: 26px"> close </span>
          </button>
        </div>
        <div class="c-head">
          <div class="p-pop">
            <img src="/icons/profile.gif" alt="Your GIF" class="gif-overlay" width="40px" />
            &nbsp;&nbsp;<%= user.name.split(' ')[0] %>
          </div>
        </div>
  
        <div class="p-options">
          <div class="p-profile" onclick="window.location.href=' /my-profile'">
              <img src="/icons/profile.gif" alt="Your GIF" class="gif-overlay" width="32px" />&nbsp;&nbsp;<button>My
                Profile</button>
          </div>
          <div class="donation" onclick="window.location.href='/donation'">
            <img src="/icons/donation.gif" alt="Your GIF" class="gif-overlay" width="32px" />&nbsp;&nbsp;<button>Donate
              Us</button>
          </div>
          <div class="term">
            <img src="/icons/term.gif" alt="Your GIF" class="gif-overlay" width="32px" />&nbsp;&nbsp;
            <button> <a href="/asset/T&C.pdf" style="text-decoration: none; color: inherit;font-size: 18px;">Term and
                Conditions</a></button>
          </div>
          <div class="contact">
            <span class="money-need">contact_support</span>&nbsp;&nbsp;
            <button> <a href="/asset/T&C.pdf" style="text-decoration: none; color: inherit;font-size: 18px;">Help and
                Support</a></button>
          </div>
          <div class="app">
            <span class="money-need"> download </span>&nbsp;&nbsp;<button id="install-button"
              onclick="install()">Install App</button>
          </div>
          <div class="logout">
            <span class="money-need"> logout </span>&nbsp;&nbsp;<button>
              <a style="font-size: 16px" href="/auth/logout">Logout</a>
            </button>
          </div>
        </div>
      </div>
    </div>
    <% } %>

    <div class="comment-section">
      <div class="comment-header">Comments  </div>
      
      <% 
      // Determine current user identifier for like checks
      let currentUserIdentifier = null;
      if (user) {
        currentUserIdentifier = user.username;
      } else if (guest) {
        currentUserIdentifier = guest.guestId;
      }
      %>
    
      <ul class="comment-list">
        <% comments.forEach(comment=> { %>
          <li class="comment-item">
            <div class="avatar">
              <img src="/icons/avatars/avatar<%= comment.authorpic %>.jpg" alt="" width="40px">
            </div>
            <div class="comment-details">
              <div class="comment-author" onclick="window.location.href=`/user/profile/<%= comment.author %>`">
                <%= comment.author %><%=comment.authorbadge%>
              </div>
              <div class="comment-text">
                <%= comment.body %>
              </div>
    
              <div class="actions">
                <div class="like-area">
                  <!-- Like Button -->
                  <button class="like-button" onclick="toggleLike('comment', '<%= comment._id %>', this)">
                    <img src="/icons/<%= currentUserIdentifier && comment.likes.includes(currentUserIdentifier) ? 'liked.png' : 'like.gif' %>" 
                         alt="like" width="18px">
                  </button>
                  <p><%= comment.likes.length %></p>
                </div>
                <!-- Reply Button -->
                <button class="reply-button" onclick="toggleReplyForm('<%= comment._id %>')">
                  Reply
                </button>
              </div>
    
              <!-- Replies List -->
              <ul class="reply-list">
                <% comment.replies.forEach(reply=> { %>
                  <li class="reply-item">
                    <div class="reply-avatar">
                      <img src="/icons/avatars/avatar<%= reply.authorpic %>.jpg" alt="" width="36px">
                    </div>
                    <div class="reply-details">
                      <div class="reply-author" onclick="window.location.href=`/user/profile/<%= reply.author %>`">
                        <%= reply.author %><%=reply.authorbadge%>
                      </div>
                      <div class="reply-text">
                        <%= reply.body %>
                      </div>
    
                      <div class="actions">
                        <div class="like-area">
                          <!-- Like Button on Reply -->
                          <button class="like-button" onclick="toggleLike('reply', '<%= reply._id %>', this)">
                            <img src="/icons/<%= currentUserIdentifier && reply.likes.includes(currentUserIdentifier) ? 'liked.png' : 'like.gif' %>"
                                 alt="like" width="16px">
                          </button>
                          <p><%= reply.likes.length %></p>
                        </div>
                        <!-- Super-Reply Button -->
                        <button class="superreply-button reply"
                                onclick="toggleSuperReplyForm('<%= comment._id %>', '<%= reply._id %>')">
                          Reply
                        </button>
                      </div>
    
                      <!-- Super-Replies List -->
                      <ul class="superreply-list">
                        <% reply.superReplies.forEach(sr=> { %>
                          <li class="superreply-item">
                            <div class="superreply-avatar">
                              <img src="/icons/avatars/avatar<%= sr.authorpic %>.jpg" alt="" width="36px">
                            </div>
                            <div class="superreply-details">
                              <div class="superreply-author"
                                   onclick="window.location.href=`/user/profile/<%= sr.author %>`">
                                <%= sr.author %><%=sr.authorbadge%>
                              </div>
                              <div class="superreply-text">
                                <%= sr.body %>
                              </div>
    
                              <div class="actions">
                                <div class="like-area">
                                  <!-- Like Button on Super-Reply -->
                                  <button class="like-button"
                                          onclick="toggleLike('superReply', '<%= comment._id %>|<%= reply._id %>|<%= sr._id %>', this)">
                                    <img src="/icons/<%= currentUserIdentifier && sr.likes.includes(currentUserIdentifier) ? 'liked.png' : 'like.gif' %>"
                                         alt="like" width="14px">
                                  </button>
                                  <p><%= sr.likes.length %></p>
                                </div>
                              </div>
                            </div>
                          </li>
                        <% }); %>
                      </ul>
    
                      <!-- Super-Reply Form -->
                      <form id="superReplyForm-<%= comment._id %>-<%= reply._id %>" class="superreply-form"
                            action="/post/comments/<%= post._id %>/superreply" method="POST"
                            onsubmit="showLoadingOverlay()" style="display:none; margin-left: 8px;">
                        <input type="hidden" name="parentCommentId" value="<%= comment._id %>">
                        <input type="hidden" name="parentReplyId" value="<%= reply._id %>">
                        <input type="text" name="superReplyBody" placeholder="Write your reply here" required>
                        <button type="submit">Submit Reply</button>
                      </form>
                    </div>
                  </li>
                <% }); %>
              </ul>
    
              <!-- Reply Form -->
              <form id="replyForm-<%= comment._id %>" class="reply-form" action="/post/comments/<%= post._id %>/reply"
                    method="POST" onsubmit="showLoadingOverlay()" style="display:none; margin-left: 20px;">
                <input type="hidden" name="parentCommentId" value="<%= comment._id %>">
                <input type="text" name="replyBody" placeholder="Write your reply here" required>
                <button type="submit">Submit Reply</button>
              </form>
            </div>
          </li>
        <% }); %>
      </ul>
    </div>
    <!-- New Comment Form -->
    <form class="new-comment-form" action="/post/comments/<%= post._id %>/new" method="POST"
      onsubmit="showLoadingOverlay()">
  <input type="text" name="commentBody" placeholder="Write your comment here" required>
  <button type="submit">Submit</button>
</form>



      <%- include('components/loader') %>

        <script src="/js/posts-features.js"></script>
        <script>
          // Show the loading overlay when a comment or reply is being submitted
          function showLoadingOverlay() {
            document.getElementById('loadingOverlay').style.display = 'flex';
          }

          // Toggle display of a given element
          function toggleVisibility(id) {
            const el = document.getElementById(id);
            if (!el) return;
            el.style.display = el.style.display === 'block' ? 'none' : 'block';
          }

          // Toggle reply form under a comment
          function toggleReplyForm(commentId) {
            toggleVisibility(`replyForm-${commentId}`);
          }

          // Toggle super-reply form under a specific reply
          function toggleSuperReplyForm(commentId, replyId) {
            toggleVisibility(`superReplyForm-${commentId}-${replyId}`);
          }




          function showprofile(n) {
            let o = document.getElementById("overlay");
            let c = document.getElementById("content");
            if (n === 1) {
              o.style.display = "flex";
              c.style.display = "flex";
              // Trigger a reflow to ensure the browser notices the change
              c.offsetHeight; // This forces a reflow
              c.style.height = "70vh";
            } else {
              c.style.height = "0vh";
              setTimeout(() => {
                o.style.display = "none";
                c.style.display = "none";
              }, 500); // Delay matches the transition duration
            }
          }

          function addLike(postId, username) {

            const likesElem = document.getElementById(`like-count-${postId}`);
            const likeIconElem = document.getElementById(`like-icon-${postId}`); // Get the like icon element
            // Successfully added like
            let currentLikes = parseInt(likesElem.innerHTML); // Get the current likes count from the DOM

            if (login === 1) {
              likesElem.innerHTML = currentLikes + 1; // Increment the displayed likes count by 1
              likeIconElem.src = "/icons/liked.png";

            }

            fetch(`/post/addlike/${postId}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
            })
              .then(response => response.json().then(data => ({
                status: response.status,
                body: data
              })))
              .then(({ status, body }) => {
                const likesElem = document.getElementById(`like-count-${postId}`);
                const likeIconElem = document.getElementById(`like-icon-${postId}`);
                if (status === 200) {
                  let currentLikes = parseInt(likesElem.innerHTML);
                  likesElem.innerHTML = currentLikes + 1;
                  likeIconElem.src = "/icons/liked.png";
                } else if (status === 401) {
                  window.location.href = "/auth/login";
                } else if (status === 400) {
                  alert(body.message || 'You have already liked this post.');
                } else {
                  console.error('Unexpected error:', body);
                  alert('An error occurred while adding the like.');
                }
              })
              .catch(error => console.error('Error:', error));
          }

          function fetchComments(postId) {
            fetch(`/post/comments/${postId}`, {
              method: 'GET',
              headers: { 'Content-Type': 'application/json' },
            })
              .then(response => {
                if (response.status === 401) {
                  window.location.href = "/auth/login";
                  return;
                } else if (response.status === 404) {
                  alert("Post not found.");
                  return;
                } else if (!response.ok) {
                  alert("An error occurred while fetching comments.");
                  return;
                }
                window.location.href = `/post/comments/${postId}`;
              })
              .catch(error => console.error('Error:', error));
          }

          async function toggleLike(type, id, btnElem) {
            try {
              // Show loading state if you want
              btnElem.disabled = true;

              const res = await fetch('/post/comments/like', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ type, id })
              });
              if (!res.ok) throw new Error(`Server responded ${res.status}`);

              const { liked } = await res.json(); // { liked: true } if now liked, false if unliked

              // Update the image inside the button
              const img = btnElem.querySelector('img');
              if (img) {
                img.src = `/icons/${liked ? 'liked' : 'like'}.png`;
              }

              // Re-enable button
              btnElem.disabled = false;
            } catch (err) {
              console.error('Like toggle failed', err);
              // Optionally show an error UI here
              btnElem.disabled = false;
            }
          }

        </script>

        </script>
</body>

</html>